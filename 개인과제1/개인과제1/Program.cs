using System;
using static System.Net.Mime.MediaTypeNames;

namespace Week2Assign
{
    public class Character
    {
        public string Name { get; } // 왜 public ??
        public string Job { get; }
        public int Lvl { get; }
        public int Atk { get; }
        public int Def { get; }
        public int Hp { get; }
        public int Gold { get; }

        public Character(string name, string job, int lvl, int atk, int def, int hp, int gold)
        {
            Name = name;
            Job = job;
            Lvl = lvl;
            Atk = atk;
            Def = def;
            Hp = hp;
            Gold = gold;
        }
    }

    public class Item
    {
        public string Name { get; }
        public string Description { get; }
        public int Type { get; }
        public int Atk { get; }
        public int Def { get; }
        public int Hp { get; }

        public bool IsEquipped { get; set; }

        public Item(string name, string description, int type, int atk, int def, int hp, bool isEquipped = false)
        {
            Name = name;
            Description = description;
            Type = type;
            Atk = atk;
            Def = def;
            Hp = hp;
            IsEquipped = isEquipped;
        }

        public void PrintItemDescription()
        {
            PrintEquipped();
            Console.Write(Name + "     | ");
            PrintItemStats();
            Console.WriteLine(Description);
        }

        public void PrintEquipped()
        {
            if (IsEquipped)
            {
                Console.Write("[");
                Console.ForegroundColor = ConsoleColor.Cyan;
                Console.Write("E");
                Console.ResetColor();
                Console.Write("]");
            }
            else
            {
                Console.Write("   ");
            }
        }

        public void PrintItemStats()
        {
            if (Atk != 0) Console.Write("공격력 + " + Atk + " | ");
            if (Def != 0) Console.Write("방어력 + " + Def + " | ");
            if (Hp  != 0) Console.Write("체  력 + " + Hp  + " | ");
        }
    }

    class Program
    {
        static Character _player;
        static List<Item> _items = new List<Item>();

        static void Main(string[] args)
        {
            // 1. 게임 세팅 - 캐릭터, 아이템 
            // 2. 시작화면 
            // 3. 메인메뉴로

            GenerateGame();
            Welcome();
            MainMenu();
        }

        static void GenerateGame()
        {
            _player = new Character("chad", "전사", 1, 10, 5, 100, 1500);


            _items.Add(new Item("무쇠 갑옷", "무쇠로 만들어져 튼튼한 갑옷입니다.", 0, 0, 5, 0));
            _items.Add(new Item("낡은   검", "쉽게 볼 수 있는 낡은 검입니다.", 1, 2, 0, 0));
            _items.Add(new Item("골든 헬름", "희귀한 광석으로 만들어진 투구입니다.", 1, 0, 9, 0));
        }

        static void Welcome()
        {
            // ASCII ART GENERATED BY https://textkool.com/en/ascii-art-generator?hl=default&vl=default&font=Red%20Phoenix
            Console.WriteLine("=============================================================================");
            Console.WriteLine("        ___________________   _____  __________ ___________ _____    ");
            Console.WriteLine("       /   _____/\\______   \\ /  _  \\ \\______   \\\\__    ___//  _  \\   ");
            Console.WriteLine("       \\_____  \\  |     ___//  /_\\  \\ |       _/  |    |  /  /_\\  \\  ");
            Console.WriteLine("       /        \\ |    |   /    |    \\|    |   \\  |    | /    |    \\ ");
            Console.WriteLine("      /_______  / |____|   \\____|__  /|____|_  /  |____| \\____|__  / ");
            Console.WriteLine("              \\/                   \\/        \\/                  \\/  ");
            Console.WriteLine(" ________    ____ ___ _______     ________ ___________________    _______");
            Console.WriteLine(" \\______ \\  |    |   \\\\      \\   /  _____/ \\_   _____/\\_____  \\   \\      \\");
            Console.WriteLine("  |    |  \\ |    |   //   |   \\ /   \\  ___  |    __)_  /   |   \\  /   |   \\\r\n");
            Console.WriteLine("  |    |   \\|    |  //    |    \\\\    \\_\\  \\ |        \\/    |    \\/    |    \\\r\n");
            Console.WriteLine(" /_______  /|______/ \\____|__  / \\______  //_______  /\\_______  /\\____|__  /\r\n");
            Console.WriteLine("         \\/                  \\/         \\/         \\/         \\/         \\/");
            Console.WriteLine("=============================================================================");
            Console.WriteLine("                           PRESS ANYKEY TO START                             ");
            Console.WriteLine("=============================================================================");
            Console.ReadKey();
        }

        static void MainMenu()
        {
            /// 0. 화면 정리
            /// 1. 설명 및 선택지 출력
            /// 2. 선택 결과값을 검증
            /// 3. 선택 결과에 따라 이동

            Console.Clear();
            Console.WriteLine("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
            Console.WriteLine("스파르타 마을에 오신 여러분 환영합니다.");
            Console.WriteLine("이곳에서 던전으로 들어가기 전 활동을 할 수 있습니다.");
            Console.WriteLine("■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
            Console.WriteLine("");
            Console.WriteLine("1. 상태 보기");
            Console.WriteLine("2. 인벤토리");
            Console.WriteLine("");

            // switch 활용 결과값 검증 및 이동
            switch (GetValidInput(1, 2))
            {
                case 1:
                    StatusMenu();
                    break;

                case 2:
                    Inventory();
                    break;
            }
        }

        static int GetValidInput(int min, int max)
        {
            string input;
            int result;

            // 예외 케이스:
            // 1. 선택지 벗어남
            // 2. 숫자가 아님
            do {
                Console.WriteLine("원하시는 행동을 입력해주세요");
                input = Console.ReadLine();
            } while (!int.TryParse(input, out result) || result < min || result > max);

            return result;
        }

        static void StatusMenu()
        {
            Console.Clear();

            PrintYellowText("■ 상태 보기 ■");
            Console.WriteLine("");
            Console.WriteLine("캐릭터의 정보가 표기됩니다.");
            Console.WriteLine("");

            Console.Write("Lv. ");
            PrintYellowText(_player.Lvl.ToString("00"));
            Console.Write(" ");
            Console.WriteLine("{0} ( {1} )", _player.Name, _player.Job);

            InsertYellowText("공격력 : ", _player.Atk.ToString("0000"));
            Console.WriteLine("");

            InsertYellowText("방어력 : ", _player.Def.ToString("0000"));
            Console.WriteLine("");

            InsertYellowText("체  력 : ", _player.Hp.ToString("0000"));
            Console.WriteLine("");

            InsertYellowText("골  드 : ", _player.Gold.ToString("0000"));
            Console.WriteLine("");
            Console.WriteLine("");

            PrintYellowText("0. ");
            Console.WriteLine("나가기");
            Console.WriteLine("");

            // switch 활용 결과값 검증 및 이동
            switch (GetValidInput(0, 0))
            {
                case 0:
                    MainMenu();
                    break;
            }
        }

        static void PrintYellowText(string txt)
        {
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write(txt);
            Console.ResetColor();
        }

        static void InsertYellowText(string txt1, string txt2, string txt3 = "")
        {
            Console.Write(txt1);
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write(txt2);
            Console.ResetColor();
            Console.Write(txt3);
        }

        static void Inventory()
        {
            Console.Clear();

            PrintYellowText("인벤토리");
            Console.WriteLine("");
            Console.WriteLine("보유 중인 아이템을 관리할 수 있습니다.");
            Console.WriteLine();

            Console.WriteLine("[아이템 목록]");
            foreach (Item element in _items) {
                Console.Write("- ");
                element.PrintItemDescription();
            }

            Console.WriteLine("");
            Console.WriteLine("1. 장착 관리");
            Console.WriteLine("0. 나가기");
            Console.WriteLine("");

            // switch 활용 결과값 검증 및 이동
            switch (GetValidInput(0, 1))
            {
                case 1:
                    EquipMenu();
                    break;

                case 0:
                    MainMenu();
                    break;
            }
        }

        static void EquipMenu()
        {
            int i = 0;
            Console.Clear();

            PrintYellowText("인벤토리 - 장착관리");
            Console.WriteLine("");
            Console.WriteLine("보유 중인 아이템을 관리할 수 있습니다.");
            Console.WriteLine();

            Console.WriteLine("[아이템 목록]");
            foreach (Item element in _items)
            {
                i++;
                Console.Write("- {0} ", i);
                element.PrintItemDescription();
            }

            Console.WriteLine("");
            Console.WriteLine("0. 나가기");
            Console.WriteLine("");

            int input = GetValidInput(0, i);

            // switch 활용 결과값 검증 및 이동
            switch (input)
            {
                case 0:
                    Inventory();
                    break;
                default:
                    ToggleEquipped(input);
                    EquipMenu();
                    break;
            }
        }

        static void ToggleEquipped(int input)
        {
            _items[input - 1].IsEquipped = !_items[input-1].IsEquipped;
        }
    }
}